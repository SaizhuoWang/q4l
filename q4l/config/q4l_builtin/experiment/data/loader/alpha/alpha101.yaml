defaults:
  - base_data_loader_alpha

name: alpha101
expressions:
  alpha101_000: sub(rank(ts_argmax(pow(condition(lt({disk:returns},0),ts_std({disk:returns},20),{disk:close}),2.),5)),0.5)
  alpha101_001: mul(-1,ts_corr(rank(ts_delta(log({disk:volume}),2)),rank(div(sub({disk:close},{disk:open}),{disk:open})),6))
  alpha101_002: mul(-1,ts_corr(rank({disk:open}),rank({disk:volume}),10))
  alpha101_003: mul(-1,ts_rank(rank({disk:low}),9))
  alpha101_004: mul(rank(sub({disk:open},div(ts_sum({disk:vwap},10),10))),mul(-1,abs(rank(sub({disk:close},{disk:vwap})))))
  alpha101_005: mul(-1,ts_corr({disk:open},{disk:volume},10))
  alpha101_006: condition(lt(ts_mean({disk:amount},20),{disk:volume}),mul(mul(-1,ts_rank(abs(ts_delta({disk:close},7)),60)),sign(ts_delta({disk:close},7))),mul(-1,1))
  alpha101_007: mul(-1,rank(sub(mul(ts_sum({disk:open},5),ts_sum({disk:returns},5)),delay(mul(ts_sum({disk:open},5),ts_sum({disk:returns},5)),10))))
  alpha101_008: condition(lt(0,ts_min(ts_delta({disk:close},1),5)),ts_delta({disk:close},1),condition(lt(ts_max(ts_delta({disk:close},1),5),0),ts_delta({disk:close},1),mul(-1,ts_delta({disk:close},1))))
  alpha101_009: rank(condition(lt(0,ts_min(ts_delta({disk:close},1),4)),ts_delta({disk:close},1),condition(lt(ts_max(ts_delta({disk:close},1),4),0),ts_delta({disk:close},1),mul(-1,ts_delta({disk:close},1)))))
  alpha101_010: mul(add(rank(ts_max(sub({disk:vwap},{disk:close}),3)),rank(ts_min(sub({disk:vwap},{disk:close}),3))),rank(ts_delta({disk:volume},3)))
  alpha101_011: mul(sign(ts_delta({disk:volume},1)),mul(-1,ts_delta({disk:close},1)))
  alpha101_012: mul(-1,rank(ts_cov(rank({disk:close}),rank({disk:volume}),5)))
  alpha101_013: mul(mul(-1,rank(ts_delta({disk:returns},3))),ts_corr({disk:open},{disk:volume},10))
  alpha101_014: mul(-1,ts_sum(rank(ts_corr(rank({disk:high}),rank({disk:volume}),3)),3))
  alpha101_015: mul(-1,rank(ts_cov(rank({disk:high}),rank({disk:volume}),5)))
  alpha101_016: mul(mul(mul(-1,rank(ts_rank({disk:close},10))),rank(ts_delta(ts_delta({disk:close},1),1))),rank(ts_rank(div({disk:volume},ts_mean({disk:amount},20)),5)))
  alpha101_017: mul(-1,rank(add(add(ts_std(abs(sub({disk:close},{disk:open})),5),sub({disk:close},{disk:open})),ts_corr({disk:close},{disk:open},10))))
  alpha101_018: mul(mul(-1,sign(add(sub({disk:close},delay({disk:close},7)),ts_delta({disk:close},7)))),add(1,rank(add(1,ts_sum({disk:returns},250)))))
  alpha101_019: mul(mul(mul(-1,rank(sub({disk:open},delay({disk:high},1)))),rank(sub({disk:open},delay({disk:close},1)))),rank(sub({disk:open},delay({disk:low},1))))
  alpha101_020: condition(lt(add(div(ts_sum({disk:close},8),8),ts_std({disk:close},8)),div(ts_sum({disk:close},2),2)),mul(-1,1),condition(lt(div(ts_sum({disk:close},2),2),sub(div(ts_sum({disk:close},8),8),ts_std({disk:close},8))),1,condition(or_(lt(1,div({disk:volume},ts_mean({disk:amount},20))),eq(div({disk:volume},ts_mean({disk:amount},20)),1)),1,mul(-1,1))))
  alpha101_021: mul(-1,mul(ts_delta(ts_corr({disk:high},{disk:volume},5),5),rank(ts_std({disk:close},20))))
  alpha101_022: condition(lt(div(ts_sum({disk:high},20),20),{disk:high}),mul(-1,ts_delta({disk:high},2)),0)
  alpha101_023: condition(or_(lt(div(ts_delta(div(ts_sum({disk:close},100),100),100),delay({disk:close},100)),0.05),eq(div(ts_delta(div(ts_sum({disk:close},100),100),100),delay({disk:close},100)),0.05)),mul(-1,sub({disk:close},ts_min({disk:close},100))),mul(-1,ts_delta({disk:close},3)))
  alpha101_024: rank(mul(mul(mul(mul(-1,{disk:returns}),ts_mean({disk:amount},20)),{disk:vwap}),sub({disk:high},{disk:close})))
  alpha101_025: mul(-1,ts_max(ts_corr(ts_rank({disk:volume},5),ts_rank({disk:high},5),5),3))
  alpha101_026: condition(lt(0.5,rank(div(ts_sum(ts_corr(rank({disk:volume}),rank({disk:vwap}),6),2),2.0))),mul(-1,1),1)
  alpha101_027: twise_a_scale(sub(add(ts_corr(ts_mean({disk:amount},20),{disk:low},5),div(add({disk:high},{disk:low}),2)),{disk:close}),1)
  alpha101_028: add(min(ts_product(rank(rank(twise_a_scale(log(ts_sum(ts_min(rank(rank(mul(-1,rank(ts_delta(sub({disk:close},1),5))))),2),1))))),1),5),ts_rank(delay(mul(-1,{disk:returns}),6),5))
  alpha101_029: div(mul(sub(1.0,rank(add(add(sign(sub({disk:close},delay({disk:close},1))),sign(sub(delay({disk:close},1),delay({disk:close},2)))),sign(sub(delay({disk:close},2),delay({disk:close},3)))))),ts_sum({disk:volume},5)),ts_sum({disk:volume},20))
  alpha101_030: add(add(rank(rank(rank(ts_decayed_linear(mul(-1,rank(rank(ts_delta({disk:close},10)))),10)))),rank(mul(-1,ts_delta({disk:close},3)))),sign(twise_a_scale(ts_corr(ts_mean({disk:amount},20),{disk:low},12))))
  alpha101_031: add(twise_a_scale(sub(div(ts_sum({disk:close},7),7),{disk:close})),mul(20,twise_a_scale(ts_corr({disk:vwap},delay({disk:close},5),230))))
  alpha101_032: rank(mul(-1,pow(sub(1,div({disk:open},{disk:close})),1)))
  alpha101_033: rank(add(sub(1,rank(div(ts_std({disk:returns},2),ts_std({disk:returns},5)))),sub(1,rank(ts_delta({disk:close},1)))))
  alpha101_034: mul(mul(ts_rank({disk:volume},32),sub(1,ts_rank(sub(add({disk:close},{disk:high}),{disk:low}),16))),sub(1,ts_rank({disk:returns},32)))
  alpha101_035: add(add(add(add(mul(2.21,rank(ts_corr(sub({disk:close},{disk:open}),delay({disk:volume},1),15))),mul(0.7,rank(sub({disk:open},{disk:close})))),mul(0.73,rank(ts_rank(delay(mul(-1,{disk:returns}),6),5)))),rank(abs(ts_corr({disk:vwap},ts_mean({disk:amount},20),6)))),mul(0.6,rank(mul(sub(div(ts_sum({disk:close},200),200),{disk:open}),sub({disk:close},{disk:open})))))
  alpha101_036: add(rank(ts_corr(delay(sub({disk:open},{disk:close}),1),{disk:close},200)),rank(sub({disk:open},{disk:close})))
  alpha101_037: mul(mul(-1,rank(ts_rank({disk:close},10))),rank(div({disk:close},{disk:open})))
  alpha101_038: mul(mul(-1,rank(mul(ts_delta({disk:close},7),sub(1,rank(ts_decayed_linear(div({disk:volume},ts_mean({disk:amount},20)),9)))))),add(1,rank(ts_sum({disk:returns},250))))
  alpha101_039: mul(mul(-1,rank(ts_std({disk:high},10))),ts_corr({disk:high},{disk:volume},10))
  alpha101_040: sub(pow(mul({disk:high},{disk:low}),0.5),{disk:vwap})
  alpha101_041: div(rank(sub({disk:vwap},{disk:close})),rank(add({disk:vwap},{disk:close})))
  alpha101_042: mul(ts_rank(div({disk:volume},ts_mean({disk:amount},20)),20),ts_rank(mul(-1,ts_delta({disk:close},7)),8))
  alpha101_043: mul(-1,ts_corr({disk:high},rank({disk:volume}),5))
  alpha101_044: mul(-1,mul(mul(rank(div(ts_sum(delay({disk:close},5),20),20)),ts_corr({disk:close},{disk:volume},2)),rank(ts_corr(ts_sum({disk:close},5),ts_sum({disk:close},20),2))))
  alpha101_045: condition(lt(0.25,sub(div(sub(delay({disk:close},20),delay({disk:close},10)),10),div(sub(delay({disk:close},10),{disk:close}),10))),mul(-1,1),condition(lt(sub(div(sub(delay({disk:close},20),delay({disk:close},10)),10),div(sub(delay({disk:close},10),{disk:close}),10)),0),1,mul(mul(-1,1),sub({disk:close},delay({disk:close},1)))))
  alpha101_046: sub(mul(div(mul(rank(div(1,{disk:close})),{disk:volume}),ts_mean({disk:amount},20)),div(mul({disk:high},rank(sub({disk:high},{disk:close}))),div(ts_sum({disk:high},5),5))),rank(sub({disk:vwap},delay({disk:vwap},5))))
  alpha101_047: div(grouped_demean(div(mul(ts_corr(ts_delta({disk:close},1),ts_delta(delay({disk:close},1),1),250),ts_delta({disk:close},1)),{disk:close}),{disk:industry_group_lv3}),ts_sum(pow(div(ts_delta({disk:close},1),delay({disk:close},1)),2),250))
  alpha101_048: condition(lt(sub(div(sub(delay({disk:close},20),delay({disk:close},10)),10),div(sub(delay({disk:close},10),{disk:close}),10)),mul(-1,0.1)),1,mul(mul(-1,1),sub({disk:close},delay({disk:close},1))))
  alpha101_049: mul(-1,ts_max(rank(ts_corr(rank({disk:volume}),rank({disk:vwap}),5)),5))
  alpha101_050: condition(lt(sub(div(sub(delay({disk:close},20),delay({disk:close},10)),10),div(sub(delay({disk:close},10),{disk:close}),10)),mul(-1,0.05)),1,mul(mul(-1,1),sub({disk:close},delay({disk:close},1))))
  alpha101_051: mul(mul(add(mul(-1,ts_min({disk:low},5)),delay(ts_min({disk:low},5),5)),rank(div(sub(ts_sum({disk:returns},240),ts_sum({disk:returns},20)),220))),ts_rank({disk:volume},5))
  alpha101_052: mul(-1,ts_delta(div(sub(sub({disk:close},{disk:low}),sub({disk:high},{disk:close})),sub({disk:close},{disk:low})),9))
  alpha101_053: div(mul(-1,mul(sub({disk:low},{disk:close}),pow({disk:open},5))),mul(sub({disk:low},{disk:high}),pow({disk:close},5)))
  alpha101_054: mul(-1,ts_corr(rank(div(sub({disk:close},ts_min({disk:low},12)),sub(ts_max({disk:high},12),ts_min({disk:low},12)))),rank({disk:volume}),6))
  alpha101_055: sub(0,mul(1,mul(rank(div(ts_sum({disk:returns},10),ts_sum(ts_sum({disk:returns},2),3))),rank(mul({disk:returns},{disk:cap})))))
  alpha101_056: sub(0,mul(1,div(sub({disk:close},{disk:vwap}),ts_decayed_linear(rank(ts_argmax({disk:close},30)),2))))
  alpha101_057: mul(-1,ts_rank(ts_decayed_linear(ts_corr(grouped_demean({disk:vwap},{disk:industry_group_lv1}),{disk:volume},3.92795),7.89291),5.50322))
  alpha101_058: mul(-1,ts_rank(ts_decayed_linear(ts_corr(grouped_demean(add(mul({disk:vwap},0.728317),mul({disk:vwap},sub(1,0.728317))),{disk:industry_group_lv2}),{disk:volume},4.25197),16.2289),8.19648))
  alpha101_059: sub(0,mul(1,sub(mul(2,twise_a_scale(rank(mul(div(sub(sub({disk:close},{disk:low}),sub({disk:high},{disk:close})),sub({disk:high},{disk:low})),{disk:volume})))),twise_a_scale(rank(ts_argmax({disk:close},10))))))
  alpha101_060: lt(rank(sub({disk:vwap},ts_min({disk:vwap},16.1219))),rank(ts_corr({disk:vwap},ts_mean({disk:amount},180),17.9282)))
  alpha101_061: mul(lt(rank(ts_corr({disk:vwap},ts_sum(ts_mean({disk:amount},20),22.4101),9.91009)),rank(lt(add(rank({disk:open}),rank({disk:open})),add(rank(div(add({disk:high},{disk:low}),2)),rank({disk:high}))))),-1)
  alpha101_062: mul(sub(rank(ts_decayed_linear(ts_delta(grouped_demean({disk:close},{disk:industry_group_lv2}),2.25164),8.22237)),rank(ts_decayed_linear(ts_corr(add(mul({disk:vwap},0.318108),mul({disk:open},sub(1,0.318108))),ts_sum(ts_mean({disk:amount},180),37.2467),13.557),12.2883))),-1)
  alpha101_063: mul(lt(rank(ts_corr(ts_sum(add(mul({disk:open},0.178404),mul({disk:low},sub(1,0.178404))),12.7054),ts_sum(ts_mean({disk:amount},120),12.7054),16.6208)),rank(ts_delta(add(mul(div(add({disk:high},{disk:low}),2),0.178404),mul({disk:vwap},sub(1,0.178404))),3.69741))),-1)
  alpha101_064: mul(lt(rank(ts_corr(add(mul({disk:open},0.00817205),mul({disk:vwap},sub(1,0.00817205))),ts_sum(ts_mean({disk:amount},60),8.6911),6.40374)),rank(sub({disk:open},ts_min({disk:open},13.635)))),-1)
  alpha101_065: mul(add(rank(ts_decayed_linear(ts_delta({disk:vwap},3.51013),7.23052)),ts_rank(ts_decayed_linear(div(sub(add(mul({disk:low},0.96633),mul({disk:low},sub(1,0.96633))),{disk:vwap}),sub({disk:open},div(add({disk:high},{disk:low}),2))),11.4157),6.72611)),-1)
  alpha101_066: mul(pow(rank(sub({disk:high},ts_min({disk:high},2.14593))),rank(ts_corr(grouped_demean({disk:vwap},{disk:industry_group_lv1}),grouped_demean(ts_mean({disk:amount},20),{disk:industry_group_lv3}),6.02936))),-1)
  alpha101_067: mul(lt(ts_rank(ts_corr(rank({disk:high}),rank(ts_mean({disk:amount},15)),8.91644),13.9333),rank(ts_delta(add(mul({disk:close},0.518371),mul({disk:low},sub(1,0.518371))),1.06157))),-1)
  alpha101_068: mul(pow(rank(ts_max(ts_delta(grouped_demean({disk:vwap},{disk:industry_group_lv2}),2.72412),4.79344)),ts_rank(ts_corr(add(mul({disk:close},0.490655),mul({disk:vwap},sub(1,0.490655))),ts_mean({disk:amount},20),4.92416),9.0615)),-1)
  alpha101_069: mul(pow(rank(ts_delta({disk:vwap},1.29456)),ts_rank(ts_corr(grouped_demean({disk:close},{disk:industry_group_lv2}),ts_mean({disk:amount},50),17.8256),17.9171)),-1)
  alpha101_070: max(ts_rank(ts_decayed_linear(ts_corr(ts_rank({disk:close},3.43976),ts_rank(ts_mean({disk:amount},180),12.0647),18.0175),4.20501),15.6948),ts_rank(ts_decayed_linear(pow(rank(sub(add({disk:low},{disk:open}),add({disk:vwap},{disk:vwap}))),2),16.4662),4.4388))
  alpha101_071: div(rank(ts_decayed_linear(ts_corr(div(add({disk:high},{disk:low}),2),ts_mean({disk:amount},40),8.93345),10.1519)),rank(ts_decayed_linear(ts_corr(ts_rank({disk:vwap},3.72469),ts_rank({disk:volume},18.5188),6.86671),2.95011)))
  alpha101_072: mul(max(rank(ts_decayed_linear(ts_delta({disk:vwap},4.72775),2.91864)),ts_rank(ts_decayed_linear(mul(div(ts_delta(add(mul({disk:open},0.147155),mul({disk:low},sub(1,0.147155))),2.03608),add(mul({disk:open},0.147155),mul({disk:low},sub(1,0.147155)))),-1),3.33829),16.7411)),-1)
  alpha101_073: mul(lt(rank(ts_corr({disk:close},ts_sum(ts_mean({disk:amount},30),37.4843),15.1365)),rank(ts_corr(rank(add(mul({disk:high},0.0261661),mul({disk:vwap},sub(1,0.0261661)))),rank({disk:volume}),11.4791))),-1)
  alpha101_074: lt(rank(ts_corr({disk:vwap},{disk:volume},4.24304)),rank(ts_corr(rank({disk:low}),rank(ts_mean({disk:amount},50)),12.4413)))
  alpha101_075: mul(max(rank(ts_decayed_linear(ts_delta({disk:vwap},1.24383),11.8259)),ts_rank(ts_decayed_linear(ts_rank(ts_corr(grouped_demean({disk:low},{disk:industry_group_lv1}),ts_mean({disk:amount},81),8.14941),19.569),17.1543),19.383)),-1)
  alpha101_076: min(rank(ts_decayed_linear(sub(add(div(add({disk:high},{disk:low}),2),{disk:high}),add({disk:vwap},{disk:high})),20.0451)),rank(ts_decayed_linear(ts_corr(div(add({disk:high},{disk:low}),2),ts_mean({disk:amount},40),3.1614),5.64125)))
  alpha101_077: pow(rank(ts_corr(ts_sum(add(mul({disk:low},0.352233),mul({disk:vwap},sub(1,0.352233))),19.7428),ts_sum(ts_mean({disk:amount},40),19.7428),6.83313)),rank(ts_corr(rank({disk:vwap}),rank({disk:volume}),5.77492)))
  alpha101_078: lt(rank(ts_delta(grouped_demean(add(mul({disk:close},0.60733),mul({disk:open},sub(1,0.60733))),{disk:industry_group_lv1}),1.23438)),rank(ts_corr(ts_rank({disk:vwap},3.60973),ts_rank(ts_mean({disk:amount},150),9.18637),14.6644)))
  alpha101_079: mul(pow(rank(sign(ts_delta(grouped_demean(add(mul({disk:open},0.868128),mul({disk:high},sub(1,0.868128))),{disk:industry_group_lv2}),4.04545))),ts_rank(ts_corr({disk:high},ts_mean({disk:amount},10),5.11456),5.53756)),-1)
  alpha101_080: mul(lt(rank(log(ts_product(rank(pow(rank(ts_corr({disk:vwap},ts_sum(ts_mean({disk:amount},10),49.6054),8.47743)),4)),14.9655))),rank(ts_corr(rank({disk:vwap}),rank({disk:volume}),5.07914))),-1)
  alpha101_081: mul(min(rank(ts_decayed_linear(ts_delta({disk:open},1.46063),14.8717)),ts_rank(ts_decayed_linear(ts_corr(grouped_demean({disk:volume},{disk:industry_group_lv1}),add(mul({disk:open},0.634196),mul({disk:open},sub(1,0.634196))),17.4842),6.92131),13.4283)),-1)
  alpha101_082: div(mul(rank(delay(div(sub({disk:high},{disk:low}),div(ts_sum({disk:close},5),5)),2)),rank(rank({disk:volume}))),div(div(sub({disk:high},{disk:low}),div(ts_sum({disk:close},5),5)),sub({disk:vwap},{disk:close})))
  alpha101_083: pow(ts_rank(sub({disk:vwap},ts_max({disk:vwap},15.3217)),20.7127),ts_delta({disk:close},4.96796))
  alpha101_084: pow(rank(ts_corr(add(mul({disk:high},0.876703),mul({disk:close},sub(1,0.876703))),ts_mean({disk:amount},30),9.61331)),rank(ts_corr(ts_rank(div(add({disk:high},{disk:low}),2),3.70596),ts_rank({disk:volume},10.1595),7.11408)))
  alpha101_085: mul(lt(ts_rank(ts_corr({disk:close},ts_sum(ts_mean({disk:amount},20),14.7444),6.00049),20.4195),rank(sub(add({disk:open},{disk:close}),add({disk:vwap},{disk:open})))),-1)
  alpha101_086: mul(max(rank(ts_decayed_linear(ts_delta(add(mul({disk:close},0.369701),mul({disk:vwap},sub(1,0.369701))),1.91233),2.65461)),ts_rank(ts_decayed_linear(abs(ts_corr(grouped_demean(ts_mean({disk:amount},81),{disk:industry_group_lv2}),{disk:close},13.4132)),4.89768),14.4535)),-1)
  alpha101_087: min(rank(ts_decayed_linear(sub(add(rank({disk:open}),rank({disk:low})),add(rank({disk:high}),rank({disk:close}))),8.06882)),ts_rank(ts_decayed_linear(ts_corr(ts_rank({disk:close},8.44728),ts_rank(ts_mean({disk:amount},60),20.6966),8.01266),6.65053),2.61957))
  alpha101_088: sub(ts_rank(ts_decayed_linear(ts_corr(add(mul({disk:low},0.967285),mul({disk:low},sub(1,0.967285))),ts_mean({disk:amount},10),6.94279),5.51607),3.79744),ts_rank(ts_decayed_linear(ts_delta(grouped_demean({disk:vwap},{disk:industry_group_lv2}),3.48158),10.1466),15.3012))
  alpha101_089: mul(pow(rank(sub({disk:close},ts_max({disk:close},4.66719))),ts_rank(ts_corr(grouped_demean(ts_mean({disk:amount},40),{disk:industry_group_lv3}),{disk:low},5.38375),3.21856)),-1)
  alpha101_090: mul(sub(ts_rank(ts_decayed_linear(ts_decayed_linear(ts_corr(grouped_demean({disk:close},{disk:industry_group_lv2}),{disk:volume},9.74928),16.398),3.83219),4.8667),rank(ts_decayed_linear(ts_corr({disk:vwap},ts_mean({disk:amount},30),4.01303),2.6809))),-1)
  alpha101_091: min(ts_rank(ts_decayed_linear(lt(add(div(add({disk:high},{disk:low}),2),{disk:close}),add({disk:low},{disk:open})),14.7221),18.8683),ts_rank(ts_decayed_linear(ts_corr(rank({disk:low}),rank(ts_mean({disk:amount},30)),7.58555),6.94024),6.80584))
  alpha101_092: div(ts_rank(ts_decayed_linear(ts_corr(grouped_demean({disk:vwap},{disk:industry_group_lv2}),ts_mean({disk:amount},81),17.4193),19.848),7.54455),rank(ts_decayed_linear(ts_delta(add(mul({disk:close},0.524434),mul({disk:vwap},sub(1,0.524434))),2.77377),16.2664)))
  alpha101_093: mul(pow(rank(sub({disk:vwap},ts_min({disk:vwap},11.5783))),ts_rank(ts_corr(ts_rank({disk:vwap},19.6462),ts_rank(ts_mean({disk:amount},60),4.02992),18.0926),2.70756)),-1)
  alpha101_094: lt(rank(sub({disk:open},ts_min({disk:open},12.4105))),ts_rank(pow(rank(ts_corr(ts_sum(div(add({disk:high},{disk:low}),2),19.1351),ts_sum(ts_mean({disk:amount},40),19.1351),12.8742)),5),11.7584))
  alpha101_095: mul(max(ts_rank(ts_decayed_linear(ts_corr(rank({disk:vwap}),rank({disk:volume}),3.83878),4.16783),8.38151),ts_rank(ts_decayed_linear(ts_argmax(ts_corr(ts_rank({disk:close},7.45404),ts_rank(ts_mean({disk:amount},60),4.13242),3.65459),12.6556),14.0365),13.4143)),-1)
  alpha101_096: mul(sub(rank(ts_decayed_linear(ts_delta(grouped_demean(add(mul({disk:low},0.721001),mul({disk:vwap},sub(1,0.721001))),{disk:industry_group_lv2}),3.3705),20.4523)),ts_rank(ts_decayed_linear(ts_rank(ts_corr(ts_rank({disk:low},7.87871),ts_rank(ts_mean({disk:amount},60),17.255),4.97547),18.5925),15.7152),6.71659)),-1)
  alpha101_097: sub(rank(ts_decayed_linear(ts_corr({disk:vwap},ts_sum(ts_mean({disk:amount},5),26.4719),4.58418),7.18088)),rank(ts_decayed_linear(ts_rank(ts_argmin(ts_corr(rank({disk:open}),rank(ts_mean({disk:amount},15)),20.8187),8.62571),6.95668),8.07206)))
  alpha101_098: mul(lt(rank(ts_corr(ts_sum(div(add({disk:high},{disk:low}),2),19.8975),ts_sum(ts_mean({disk:amount},60),19.8975),8.8136)),rank(ts_corr({disk:low},{disk:volume},6.28259))),-1)
  alpha101_099: sub(0,mul(1,mul(sub(mul(1.5,twise_a_scale(grouped_demean(grouped_demean(rank(mul(div(sub(sub({disk:close},{disk:low}),sub({disk:high},{disk:close})),sub({disk:high},{disk:low})),{disk:volume})),{disk:industry_group_lv3}),{disk:industry_group_lv3}))),twise_a_scale(grouped_demean(sub(ts_corr({disk:close},rank(ts_mean({disk:amount},20)),5),rank(ts_argmin({disk:close},30))),{disk:industry_group_lv3}))),div({disk:volume},ts_mean({disk:amount},20)))))
  alpha101_100: div(sub({disk:close},{disk:open}),add(sub({disk:high},{disk:low}),.001))
